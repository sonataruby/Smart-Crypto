<div class="container">
	
	<div id="game"></div>
</div>
<script src="//cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.js"></script>
<script>
jQuery(document).ready(function(){
	

var config = {
    type: Phaser.AUTO,
    width: document.getElementById("game").offsetWidth,
    height: 600,
    parent: document.getElementById("game"),
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 200 }
        }
    },
    scene: {
        preload: preload,
        create: create
    }
};
var game = new Phaser.Game(config);

function preload ()
{
    this.load.setBaseURL('https://cryptocar.cc');

    this.load.image('sky', 'assets/car/9144.jpg');
    this.load.image('logo', 'assets/car/logo.png');
    this.load.image('red', 'assets/car/logo3.png');
}

function create ()
{
	this.add.image(920, 600, 'sky');
	this.add.text(100, 10, '<%= items.pool_name%>', { fill: '#0f0' });
	this.add.text(100, 50, 'Total Value Lock', { fill: '#0f0' });
	this.add.text(100, 70, '<%= block.amount%> <%= token.name%>', { fill: '#0f0' });
	this.add.text(100, 100, 'Remaining Time', { fill: '#0f0' });
	this.add.text(100, 140, 'Pool Rate', { fill: '#0f0' });
	this.add.text(100, 160, '<%= block.rate%> <%= token.name%> / Year', { fill: '#0f0' });
	this.add.text(100, 190, 'APR', { fill: '#0f0' });
	this.add.text(100, 210, '<%= block.apr%> %', { fill: '#0f0' });
 	

 	this.add.text(500, 50, 'Your Liquidity Deposit', { fill: '#0f0' });
	this.add.text(500, 70, '<%= block.deposit%> <%= token.name%>', { fill: '#0f0' });
	this.add.text(500, 100, 'Your Power', { fill: '#0f0' });

	this.add.text(500, 140, 'Your Claim', { fill: '#0f0' });
	this.add.text(500, 160, '<%= block.claimable%> <%= token.name%> / Year', { fill: '#0f0' });

	const blockchain = SmartApps.tokenFarm;

	const deposit = this.add.text(100, 400, 'Deposit', { fill: '#0f0' })
		.setInteractive()
		.on('pointerdown', () => {
			console.log("Click Deposit");
			blockchain.confirm(<%= items.max_amount%>);
		});
	const ClaimButton = this.add.text(200, 400, 'Claim', { fill: '#0f0' }).setInteractive()
		.on('pointerdown', () => {
			console.log("Click Claim");
			blockchain.claim(<%= block.session_id%>);
		});
	const WithdrawButton = this.add.text(300, 400, 'Withdraw', { fill: '#0f0' }).setInteractive()
		.on('pointerdown', () => {
			console.log("Click Withdraw");
			blockchain.withdraw();
		});

    var particles = this.add.particles('red');

    var emitter = particles.createEmitter({
        speed: 100,
        scale: { start: 1, end: 0 },
        blendMode: 'ADD'
    });

    var logo = this.physics.add.image(400, 100, 'logo');

    logo.setVelocity(100, 200);
    logo.setBounce(1, 1);
    logo.setCollideWorldBounds(true);

    emitter.startFollow(logo);
}
});

</script>